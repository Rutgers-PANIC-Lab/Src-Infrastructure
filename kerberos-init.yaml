- hosts: localhost
  become: true

  tasks:
    - name: Check for Panic Network
      set_fact:
        group: "{{ group_panic }}"
        group_admin: "{{ group_admin_panic }}"
      when: ansible_default_ipv4.network == network_panic

    - name: Check for Parasol Network
      set_fact:
        group: "{{ group_parasol }}"
        group_admin: "{{ group_admin_parasol }}"
      when: ansible_default_ipv4.network == network_parasol

    - name: Fail if unknown network
      fail:
        msg: "This script only works on the Panic and Parasol subnets"
      when: group is not defined

    - name: add domain to hostname
      when: not '.' in hostname
      command: hostnamectl set-hostname {{ hostname }}.{{ hostname_domain }}

    # we assume that it is good if it is already in place
    - name: Check for existing keytable
      stat:
        path: /etc/krb5.keytab
      register: keytab_stat

    - name: Set up a valid keytable
      block:
        - name: Get keytable
          command: curl --local-port 1-1023 -o /tmp/keytable https://{{ server }}/accounts/enrollhosts?host={{ hostname }}
          args:
            warn: no

        - name: Validate the keytable
          shell: "xxd /tmp/keytable | head -n 1 | grep 0502"
          register: keytab_validate
          ignore_errors: true

        - name: Fail if bad keytable
          fail:
            msg: "Bad or missing keytable"
          when: keytab_validate.rc != 0

        - name: Put keytable in place
          command: mv /tmp/keytable /etc/krb5.keytab

        - name: Set keytable permissions
          file:
            path: /etc/krb5.keytab
            state: touch
            mode: '0600'

      when: keytab_stat.stat.exists != true

    - name: Set up config file (login group {{ group }} / admin group {{ group_admin }}
      lineinfile:
        path: /etc/ansible/hosts
        state: present
        create: yes
        line: "localhost nfsserver=true local_homedir=true grouplist=coresysadmins,{{ group }} sudogroups=slide,{{ group_admin }} net_autofs=true domain=cs.rutgers.edu"
  vars:
    server: services.cs.rutgers.edu
    hostname: "{{ ansible_nodename }}"
    network_panic: 172.16.28.0
    network_parasol: 172.16.18.0
    group_panic: panic-users
    group_admin_panic: panic-admins
    group_parasol: parasol-users
    group_admin_parasol: parasol-admins
    hostname_domain: cs.rutgers.edu
