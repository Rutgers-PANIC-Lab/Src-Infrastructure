- hosts: all
  become: true

  tasks:
    - name: Install dependencies
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - autoconf
          - pkg-config
          - libtool
          - libdrm-dev
          - openbox
          - libx11-dev
          - libgl1-mesa-glx
          - libgl1-mesa-dev
          - cmake
          - git-lfs
          - libpciaccess-dev

    - name: Create workspace dir
      file:
        path: "{{ media_workspace }}"
        state: directory
        mode: u+rw,g+rw,o+rw

    # libva
    - name: Build and install libva
      when: libva_install|bool
      block:
      - name: Check out libva
        git:
          repo: 'https://github.com/intel/libva.git'
          dest: "{{ src_dir }}"
          version: "{{ libva_version }}"

      - name: Configure libva
        command: ./autogen.sh --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu
        args:
          chdir: "{{ src_dir }}"

      - name: Make libva
        command: make {{ jarg }}
        args:
          chdir: "{{ src_dir }}"

      - name: Install libva
        command: make install
        become: yes
        args:
          chdir: "{{ src_dir }}"

      - name: Call ldconfig for libva
        command: ldconfig
        become: yes

      vars:
        src_dir: "{{ media_workspace }}/libva"

    # libva utils
    - name: Build and install libva_utils
      when: libva_install|bool
      block:
      - name: Check out libva_utils
        git:
          repo: 'https://github.com/intel/libva-utils.git'
          dest: "{{ src_dir }}"
          version: "{{ libva_utils_version }}"

      - name: Configure libva_utils
        command: ./autogen.sh --prefix=/usr --libdir=/usr/lib/x86_64-linux-gnu
        args:
          chdir: "{{ src_dir }}"

      - name: Make libva_utils
        command: make {{ jarg }}
        args:
          chdir: "{{ src_dir }}"

      - name: Install libva_utils
        command: make install
        become: yes
        args:
          chdir: "{{ src_dir }}"

      vars:
        src_dir: "{{ media_workspace }}/libva_utils"

    # gmmlib
    - name: Build and install gmmlib
      when: gmmlib_install|bool
      block:
        - name: Check out gmmlib
          git:
            repo: 'https://github.com/intel/gmmlib.git'
            dest: "{{ src_dir }}"
            version: "{{ gmmlib_version }}"

        - name: Create build dir for gmmlib
          file:
            path: "{{ build_dir }}"
            state: directory

        - name: Configure gmmlib
          command: cmake -DCMAKE_BUILD_TYPE=Release {{ src_dir }}
          args:
            chdir: "{{ build_dir }}"

        - name: Build gmmlib
          command: make {{ jarg }}
          args:
            chdir: "{{ build_dir }}"

        - name: Install gmmlib
          command: make install
          become: yes
          args:
            chdir: "{{ build_dir }}"

      vars:
        src_dir: "{{ media_workspace }}/gmmlib"
        build_dir: "{{ media_workspace }}/gmmlib_build"

    # intel media-driver
    - name: Build and install intel media-driver
      when: media_driver_install|bool
      block:
        - name: Check out media-driver
          git:
            repo: 'https://github.com/intel/media-driver.git'
            dest: "{{ src_dir }}"
            version: "{{ media_driver_version }}"

        - name: Create build dir for media-driver
          file:
            path: "{{ build_dir }}"
            state: directory

        - name: Configure media-driver
          command: cmake {{ src_dir }}
          args:
            chdir: "{{ build_dir }}"

        - name: Build media-driver
          command: make {{ jarg }}
          args:
            chdir: "{{ build_dir }}"

        - name: Install media-driver
          command: make install
          become: yes
          args:
            chdir: "{{ build_dir }}"

      vars:
        src_dir: "{{ media_workspace }}/media_driver"
        build_dir: "{{ media_workspace }}/media_driver_build"

    # intel media sd
    - name: Build and install intel media sdk
      when: media_sdk_install|bool
      block:
        - name: Check out media sdk
          git:
            repo: 'https://github.com/Intel-Media-SDK/MediaSDK.git'
            dest: "{{ src_dir }}"
            version: "{{ media_sdk_version }}"

        - name: Create build dir for media sdk
          file:
            path: "{{ build_dir }}"
            state: directory

        - name: Configure media sdk
          command: cmake {{ src_dir }}
          args:
            chdir: "{{ build_dir }}"

        - name: Build media sdk
          command: make {{ jarg }}
          args:
            chdir: "{{ build_dir }}"

        - name: Install media sdk
          command: make install
          become: yes
          args:
            chdir: "{{ build_dir }}"

      vars:
        src_dir: "{{ media_workspace }}/media_sdk"
        build_dir: "{{ media_workspace }}/media_sdk_build"

    - name: Add media-sdk to ld.conf.d
      blockinfile:
        path: /etc/ld.so.conf.d/intel-media-sdk.conf
        create: yes
        state: present
        block: |
          /opt/intel/mediasdk/lib

    - name: Run ldconfig
      command: ldconfig

  vars:
    media_workspace: /tmp/media_workspace
    jarg: -j9

    libva_version: 2.6.0
    libva_utils_version: 2.6.0
    gmmlib_version: intel-gmmlib-19.4.1
    media_driver_version: intel-media-19.4.0r
    media_sdk_version: intel-mediasdk-19.4.0

    libva_install: true
    gmmlib_install: true
    media_driver_install: true
    media_sdk_install: true
    env_vars_set: true


