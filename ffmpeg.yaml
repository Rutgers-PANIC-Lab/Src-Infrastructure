- hosts: all
  become: true

  tasks:
    - name: Install dependencies
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - autoconf
          - libtool
          - libdrm-dev
          - pkg-config
          - nasm
          - cmake
          - cmake-curses-gui
          - build-essential
          - mercurial

    - name: Delete any old workspace dir
      file:
        path: "{{ ffmpeg_workspace }}"
        state: absent

    - name: Create workspace dir
      file:
        path: "{{ ffmpeg_workspace }}"
        state: directory
        mode: u+rw,g+rw,o+rw

    # nvidia headers for ffmpeg
    - name: Install nvidia headers
      when: cuda|default('false')|bool and nvidia_headers_install|bool
      block:
      - name: Check out nvidia headers
        git:
          repo: 'https://git.videolan.org/git/ffmpeg/nv-codec-headers.git'
          dest: "{{ src_dir }}"
          version: "{{ nvidia_headers_version }}"

      - name: Make nvidia headers
        command: make
        args:
          chdir: "{{ src_dir }}"

      - name: Install nvidia headers
        command: make install
        become: yes
        args:
          chdir: "{{ src_dir }}"

      vars:
        src_dir: "{{ ffmpeg_workspace }}/nv-codec-headers"

    # x264
    - name: Install x264
      when: x264_install|bool
      block:
        - name: Check out x264
          git:
            repo: 'https://code.videolan.org/videolan/x264.git'
            dest: "{{ src_dir }}"
            version: stable

        - name: Configure x264
          command: ./configure --enable-static --enable-shared
          args:
            chdir: "{{ src_dir }}"

        - name: Build x264
          command: make {{ jarg }}
          args:
            chdir: "{{ src_dir }}"

        - name: Install x264
          command: make install
          become: yes
          args:
            chdir: "{{ src_dir }}"

      vars:
        src_dir: "{{ ffmpeg_workspace }}/x264"

    # x265
    - name: Install x265
      when: x265_install|bool
      block:
        - name: Check out x265
          throttle: 1
          hg:
            repo: 'http://hg.videolan.org/x265'
            dest: "{{ src_dir }}"
            revision: "{{ x265_version }}"

        - name: Make x265 makefiles (configure)
          command: 'cmake -G "Unix Makefiles" ../../source'
          args:
            chdir: "{{ src_dir }}/build/linux"

        - name: Build x265
          command: make {{ jarg }}
          args:
            chdir: "{{ src_dir }}/build/linux"

        - name: Install x265
          command: make install
          become: yes
          args:
            chdir: "{{ src_dir }}/build/linux"

      vars:
        src_dir: "{{ ffmpeg_workspace }}/x265"

    # run ldconfig
    - name: Run ldconfig
      command: ldconfig
      become: yes

    # ffmpeg
    - name: Set ffmpeg base config flags
      set_fact:
        ffmpeg_config_base: --enable-nonfree --enable-gpl --enable-libx264 --enable-libx265
        ffmpeg_pkgconfig_base: /usr/local/lib
        ffmpeg_path_base: "{{ ansible_env.PATH }}"

    - name: Set ffmpeg Nvidia config flags
      set_fact:
        ffmpeg_config_nvidia: "--enable-cuda-nvcc --enable-cuvid --enable-nvenc --enable-libnpp --extra-cflags=-I/usr/local/cuda/include --extra-ldflags=-L/usr/local/cuda/lib64"
        ffmpeg_pkgconfig_nvidia: ""
        ffmpeg_path_nvidia: /usr/local/cuda/bin
      when: cuda|default('false')|bool

    - name: Set ffmpeg Intel (QSV) config flags
      set_fact:
        ffmpeg_config_qsv: "--enable-libmfx"
        ffmpeg_pkgconfig_qsv: /opt/intel/mediasdk/lib/pkgconfig
        ffmpeg_path_qsv: ""
      when: qsv|default('false')|bool

    - name: Install ffmpeg
      when: ffmpeg_install|bool
      block:
        - name: Check out ffmpeg
          git:
            repo: 'https://git.ffmpeg.org/ffmpeg.git'
            dest: "{{ src_dir }}"
            version: "{{ ffmpeg_version }}"

        - name: Update nvidia compute strings
          when: cuda|default('false')|bool
          block:
            - name: Update compute_30 to compute_52
              replace:
                path: "{{ src_dir }}/configure"
                regexp: 'compute_30'
                replace: 'compute_52'

            - name: Update sm_30 to sm_52
              replace:
                path: "{{ src_dir }}/configure"
                regexp: 'sm_30'
                replace: 'sm_52'

        - name: Configure ffmpeg
          command: "./configure {{ ffmpeg_config_base }} {{ ffmpeg_config_nvidia|default('') }} {{ ffmpeg_config_qsv|default('') }}"
          args:
            chdir: "{{ src_dir }}"
          environment:
            PKG_CONFIG_PATH: "{{ ffmpeg_pkgconfig_base }}:{{ ffmpeg_pkgconfig_nvidia|default('') }}:{{ ffmpeg_pkgconfig_qsv|default('') }}"
            PATH: "{{ ffmpeg_path_base }}:{{ ffmpeg_path_nvidia|default('') }}:{{ ffmpeg_path_qsv|default('') }}"

        - name: Build ffmpeg
          command: make {{ jarg }}
          args:
            chdir: "{{ src_dir }}"
          environment:
            PATH: "{{ ffmpeg_path_base }}:{{ ffmpeg_path_nvidia|default('') }}:{{ ffmpeg_path_qsv|default('') }}"

        - name: Install ffmpeg
          command: make install
          become: yes
          args:
            chdir: "{{ src_dir }}"

      vars:
        src_dir: "{{ ffmpeg_workspace }}/ffmpeg"

    - name: Run ldconfig
      command: ldconfig
      become: yes

  vars:
    jarg: -j9
    ffmpeg_workspace: /tmp/ffmpeg_workspace

    nvidia_headers_version: n11.1.5.1
    x264_version: stable
    x265_version: "Release_3.5"
    ffmpeg_version: n5.0.1

    nvidia_headers_install: true
    x264_install: true
    x265_install: true
    ffmpeg_install: true
